/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";

export function LogoNegro(props) {

  const componenteRef = useRef(); 
  const [positionLogo, setPositionLogo] = useState([-13, 12.5, 0]);
  const handleResize = () => {
    setPositionLogo([(window.innerWidth/10)/100*-8, 12.5, 0])
    
  }

  useEffect(()=>{
    window.addEventListener('resize', handleResize)
  }, []
    
    );
  const { nodes, materials } = useGLTF("/logo-negro.glb");
  materials["Logo-negro"].transparent = true;
  return (
    <group {...props} dispose={null}>
      <mesh ref = {componenteRef}
        castShadow
        receiveShadow
        geometry={nodes["Logo-negro"].geometry}
        material={materials["Logo-negro"]}
        position={positionLogo}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={1.737}
      />
    </group>
  );
}

useGLTF.preload("/logo-negro.glb");